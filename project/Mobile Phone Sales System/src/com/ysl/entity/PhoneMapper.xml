<?xml version="1.0" encoding="UTF-8" ?>
<!-- Dept.xml 在com.tarena.entity 包中  -->  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<!-- namespace 的值是 DeptMapper 接口
  每个Mapper 接口对应一个配置文件  -->
<mapper namespace="com.ysl.dao.PhoneDao">
	<!-- add -->
	<!-- 
	1。当传入对象的属性为null时，在执行该SQL会报错，但是在项目中，新增时很多字段是可以为空的
	，因此必须要解决这个问题。
	  2.该问题产生的原因是，在执行SQL时MyBatis会自动通过对象中的属性给SQL中参数赋值，它会自动将java
	  类型转换为数据库的类型，但一旦传入的是null它就无法判断这个类型应该是什么，就有可能将类型
	  转换错误，从而报错
	  3.要解决这个问题，需要针对这些可能为空的字段，手动指定其转换类型
	  4.一般情况下，我们没有必要挨个  -->
	<insert id="add" parameterType="com.ysl.entity.Phone">
	    insert into phone(buser_id,fenlei,phonename,phone_number,phone_price,chicun,fenbianlv,front,behind,cpu,memery,picture) 
	    values(#{buser_id,jdbcType=INTEGER},
	    #{fenlei,jdbcType=VARCHAR},
	    #{phonename,jdbcType=VARCHAR},
	    #{phone_number,jdbcType=INTEGER},
	    #{phone_price,jdbcType=INTEGER},    
	    #{chicun,jdbcType=VARCHAR},
	    #{fenbianlv,jdbcType=VARCHAR},
	    #{front,jdbcType=VARCHAR},
	    #{behind,jdbcType=VARCHAR},
	    #{cpu,jdbcType=VARCHAR},
	    #{memery,jdbcType=VARCHAR},
	    #{picture,jdbcType=VARCHAR})
	</insert>
  <select id="findByAll"  resultType="com.ysl.entity.Phone">
          select * from phone
  </select>
    <select id="findById"  resultType="com.ysl.entity.Phone">
          select * from phone where phone_id=#{phone_id,jdbcType=INTEGER}
  </select>
    <select id="findByBuser_id" parameterType="int"  resultType="com.ysl.entity.Phone">
          select * from phone where buser_id=#{buser_id,jdbcType=INTEGER} order by phone_id limit #{begin},#{pageSize}
  </select>
  
  <delete id="delete" parameterType="int">
      delete from phone where phone_id=#{phone_id,jdbcType=INTEGER}
  </delete>
  
  <update id="update" parameterType="com.ysl.entity.Phone">
      update phone set phonename=#{phonename,jdbcType=VARCHAR},
      phone_number=#{phone_number,jdbcType=INTEGER},
      phone_price=#{phone_price,jdbcType=INTEGER},
      chicun=#{chicun,jdbcType=VARCHAR},
      fenbianlv=#{fenbianlv,jdbcType=VARCHAR},
      front=#{front,jdbcType=VARCHAR},
      behind=#{behind,jdbcType=VARCHAR},
      cpu=#{cpu,jdbcType=VARCHAR},
      memery=#{memery,jdbcType=VARCHAR},
      picture=#{picture,jdbcType=VARCHAR} where phone_id=#{phone_id}
  </update>
  
 
  <select id="findByName"  resultType="com.ysl.entity.Phone" parameterType="java.lang.String">
          select * from phone where phonename=#{phonename,jdbcType=INTEGER}
  </select>
  
  
  <!-- findByPage -->
	<select id="findByPage" parameterType="com.ysl.entity.page.PhonePage" resultType="com.ysl.entity.Phone">
	     select * from phone where buser_id=#{buser_id,jdbcType=INTEGER} order by phone_id limit #{begin},#{pageSize}
	    
	</select>
<!-- findRows -->
	<select id="findRows" parameterType="int" resultType="int">
	  select count(*) from phone where buser_id=#{buser_id};
	</select>
	
	  <!-- findByFrontPage -->
	<select id="findByFrontPage" parameterType="com.ysl.entity.page.PhonePage" resultType="com.ysl.entity.Phone">
	     select * from phone 
	     
	     <where>
	       <if test="fenleilist.size()>0">
	         and  fenlei in
	            <foreach item="fenleilist" index="index" collection="fenleilist" 
                         open="(" separator="," close=")">
                        #{fenleilist}
                </foreach>
	       </if>
	      
	      
	       <if test="pricelist.size()>0">
	           and phone_price &gt;#{pricelist[0]} &amp;&amp; phone_price &lt;#{pricelist[1]}
	       </if>
	       
	   
	       <if test="sousuo!=null">
	         and  phonename  LIKE '%${sousuo}%'
	       </if>
	      <!--  
	         <if test="chicunlist.size()>0">
	         and  chicun in
	            <foreach item="chicunlist" index="index" collection="chicunlist" 
                         open="(" separator="," close=")">
                        #{chicunlist}
                </foreach>
	       </if>
	        -->
	     </where>  
	       order by phone_id 
	    
	</select>
	
<!-- findFrontRows -->
	<select id="findFrontRows"  resultType="int" parameterType="com.ysl.entity.page.PhonePage">
	  select count(*) from phone 
	  
	  <where>
	       <if test="fenleilist.size()>0">
	         and  fenlei in
	            <foreach item="fenleilist" index="index" collection="fenleilist" 
                         open="(" separator="," close=")">
                        #{fenleilist}
                </foreach>
	       </if>
	      
	      
	       <if test="pricelist.size()>0">
	           and phone_price &gt;#{pricelist[0]} &amp;&amp; phone_price &lt;#{pricelist[1]}
	       </if>
	        
	         <if test="sousuo!=null">
	         and  phonename  LIKE '%${sousuo}%'
	       </if>
	       <!-- 
	       
	       <if test="cpulist.size()>0">
	         and  cpu in
	            <foreach item="cpulist" index="index" collection="cpulist" 
                         open="(" separator="," close=")">
                        #{cpulist}
                </foreach>
	       </if>
	       
	         <if test="chicunlist.size()>0">
	         and  chicun in
	            <foreach item="chicunlist" index="index" collection="chicunlist" 
                         open="(" separator="," close=")">
                        #{chicunlist}
                </foreach>
	       </if>
	        -->
	     </where>
	  
	  
	</select>
	
	
	
	
	
	
	
	
	<select id="findByPinpai" resultType="java.lang.String">
	          select distinct phonename from phone
	</select>
	
		
	<select id="findByCpu" resultType="java.lang.String">
	          select distinct cpu from phone
	</select>
	
	<select id="findByChicun" resultType="java.lang.String">
	          select distinct chicun from phone 
	</select>
	
	
	
    <!-- 修改购买之后应该把库存的数量减少 -->
     <update id="updateNumber" parameterType="com.ysl.entity.Phone">
          update phone set phone_number=#{phone_number} where phone_id=#{phone_id}
     </update>
	
</mapper>







