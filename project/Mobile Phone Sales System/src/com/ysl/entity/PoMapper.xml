<?xml version="1.0" encoding="UTF-8" ?>
<!-- Dept.xml 在com.tarena.entity 包中  -->  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<!-- namespace 的值是 DeptMapper 接口
  每个Mapper 接口对应一个配置文件  -->
<mapper namespace="com.ysl.dao.PoDao">
	<!-- add -->
	<!-- 
	1。当传入对象的属性为null时，在执行该SQL会报错，但是在项目中，新增时很多字段是可以为空的
	，因此必须要解决这个问题。
	  2.该问题产生的原因是，在执行SQL时MyBatis会自动通过对象中的属性给SQL中参数赋值，它会自动将java
	  类型转换为数据库的类型，但一旦传入的是null它就无法判断这个类型应该是什么，就有可能将类型
	  转换错误，从而报错
	  3.要解决这个问题，需要针对这些可能为空的字段，手动指定其转换类型
	  4.一般情况下，我们没有必要挨个  -->
	<insert id="add" parameterType="com.ysl.entity.Po">
	    insert into po(po_bianhao,phone_id,buser_id,user_id,po_number,po_price,fukuan,fahuo,tuihuo) 
	    values(#{po_bianhao,jdbcType=VARCHAR},
	    #{phone_id,jdbcType=INTEGER},
	    #{buser_id,jdbcType=INTEGER},
	    #{user_id,jdbcType=INTEGER},
	    #{po_number,jdbcType=INTEGER},
	    #{po_price,jdbcType=INTEGER},
	    #{fukuan,jdbcType=VARCHAR},
	    #{fahuo,jdbcType=VARCHAR},
	    #{tuihuo,jdbcType=VARCHAR})
	</insert>
	<select id="findByAll" resultType="com.ysl.entity.Po" parameterType="int">
	   select * from po where buser_id=#{buser_id}
	</select>
	<delete id="delete" parameterType="int">
	     delete from po where po_id=#{po_id}
	</delete>
	
	<update id="updatefukuan" parameterType="com.ysl.entity.Po">
	     update po set fukuan=#{fukuan,jdbcType=VARCHAR} where po_id=#{po_id}
	</update>
	<update id="updatefahuo" parameterType="com.ysl.entity.Po">
	     update po set fahuo=#{fahuo,jdbcType=VARCHAR} where po_id=#{po_id}
	</update>
	<update id="updatetuihuo" parameterType="com.ysl.entity.Po">
	     update po set tuihuo=#{tuihuo,jdbcType=VARCHAR} where po_id=#{po_id}
	</update>
	
	<select  id="findById" parameterType="int" resultType="com.ysl.entity.Po">
	     select * from po where po_id=#{po_id}
	</select>
	
	<update id="update" parameterType="com.ysl.entity.Po">
	     update po set po_number=#{po_number},po_price=#{po_price} where po_id=#{po_id}
	</update>
	
	      
  <!-- findByPage -->
	<select id="findByPage" parameterType="com.ysl.entity.page.PoPage" resultType="com.ysl.entity.Po">
	     select * from po join phone on po.phone_id=phone.phone_id join user on po.user_id=user.user_id where po.buser_id=#{buser_id} order by po_id limit #{begin},#{pageSize}
	    
	</select>
<!-- findRows -->
	<select id="findRows" parameterType="int" resultType="int">
	  select count(*) from po where buser_id=#{buser_id};
	</select>
	
	
	 <!-- findByFrontPage -->
	<select id="findByFrontPage" parameterType="com.ysl.entity.page.PoPage" resultType="com.ysl.entity.Po">
	     select * from po join phone on po.phone_id=phone.phone_id where po.user_id=#{user_id} order by po_id limit #{begin},#{pageSize}
	    
	</select>
<!-- findFrontRows -->
	<select id="findFrontRows" parameterType="int" resultType="int">
	  select count(*) from po where user_id=#{user_id};
	</select>
	
	
		 <!-- findByFrontPage1 -->
	<select id="findByFrontPage1" parameterType="com.ysl.entity.page.PoPage" resultType="com.ysl.entity.Po">
	     select * from po join phone on po.phone_id=phone.phone_id where po.user_id=#{user_id} &amp;&amp; fukuan=#{fukuan} &amp;&amp; fahuo=#{fahuo} order by po_id limit #{begin},#{pageSize}
	    
	</select>
<!-- findFrontRows1 -->
	<select id="findFrontRows1" parameterType="com.ysl.entity.page.PoPage" resultType="int">
	  select count(*) from po where user_id=#{user_id} &amp;&amp; fukuan=#{fukuan} &amp;&amp; fahuo=#{fahuo};
	</select>
	
	
	<update id="usertuihuo" parameterType="com.ysl.entity.Po">
	     update po set tuihuo=#{tuihuo} where po_id=#{po_id}
	</update>
	<update id="userfukuan" parameterType="com.ysl.entity.Po">
	     update po set fukuan=#{fukuan} where po_id=#{po_id}
	</update>
	
	
</mapper>







